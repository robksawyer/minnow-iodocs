{
  "name": "Minnow API",
  "protocol": "rest",
  "basePath": "http://api.gominnow.com",
  "publicPath": "",
  "resources" : {
    
    "Authentication [FOR REFERENCE ONLY]": {
      "methods": {
        "login": {
          "name": "User Login",
          "description": "Logs a user into the app.",
          "httpMethod": "POST",
          "path": "/auth/login?type=local",
          "parameters": {
            "phone": {
                "title":"phone number",
                "required":false,
                "default": "",
                "type":"string",
                "description":"The phone number you signed up with."
            },
            "password": {
                "title":"password",
                "required":false,
                "default": "",
                "type":"string",
                "description":"Password for your account."
            }
          }
        },
        "logout": {
          "name": "User Logout",
          "description": "Logs a user out of the app.",
          "httpMethod": "GET",
          "path": "/auth/logout"
        },
        "facebook-login": {
          "name": "Facebook User Login",
          "description": "Logs a user in via Facebook.",
          "httpMethod": "GET",
          "path": "/auth/login?type=facebook",
          "parameters": {
            "client_id": {
                "title":"client_id",
                "required": true,
                "default": "736732276411375",
                "type":"string",
                "description":"The Facebook client id."
            }
          }
        },
        "access-token": {
          "name": "Access Token",
          "description": "Grabs an access token.",
          "httpMethod": "GET",
          "path": "/user/jwt",
          "parameters":{}
        },
        "refresh-token": {
          "name": "[COMING SOON] Refresh Token",
          "description": "[COMING SOON] Grabs a refresh token.",
          "httpMethod": "GET",
          "path": "/user/jwt-refresh",
          "parameters":{}
        }
      }
    },

    "Posts": {
      "methods": {

        "getLatest": {
          "name": "Latest Posts",
          "description": "Returns the latest posts.",
          "httpMethod": "GET",
          "path": "/post/latest",
          "parameters": {
            "limit": {
                "title":"limit",
                "required":false,
                "default": 10,
                "type":"integer",
                "description":"Return a certain number."
            },
            "skip": {
                "title":"skip",
                "required":false,
                "default": 0,
                "type":"integer",
                "description":"This is used for paging. Skip the number of posts you want."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        },

        "createPost": {
          "name": "Create a Post",
          "description": "Create a Post.",
          "httpMethod": "POST",
          "path": "/post/create",
          "parameters": {
            "body": {
                "title":"body",
                "required":false,
                "default": "",
                "type":"textarea",
                "description":"The post content."
            },
            "secret": {
                "type":"object",
                "description":"A JSON object that contains the secret details.",
                "properties": {
                  "body":{
                    "title":"body",
                    "required":true,
                    "default": "",
                    "type":"textarea",
                    "description":"The content that people will pay for."
                  },
                  "price": {
                    "title":"price",
                    "required": false,
                    "default": 0.00,
                    "type":"float",
                    "description":"Cost of the secret."
                  },
                  "status": {
                    "title":"status",
                    "required":false,
                    "default":"hidden",
                    "type":"string",
                    "description":"If a secret is free, the status should be public.",
                    "enum": ["hidden", "public", "private", "banned"]
                  }
                }
            },
            "category": {
                "title":"category",
                "required":true,
                "default": "uncategorized",
                "type":"string",
                "description":"The post status.",
                "enum": ["uncategorized", "person", "place", "thing", "other"]
            },
            "img": {
              "type":"object",
              "description":"A JSON object that contains the Flickr img details.",
              "properties": {
                "id": {
                    "title": "id",
                    "required": true,
                    "type":"string",
                    "description": "Flickr image id.",
                    "default": ""
                },
                "owner": {
                    "title": "owner",
                    "required": true,
                    "type":"string",
                    "description": "Flickr owner id.",
                    "default": ""
                },
                "secret": {
                    "title": "secret",
                    "required": true,
                    "type":"string",
                    "description": "Flickr image secret.",
                    "default": ""
                },
                "server": {
                    "title": "server",
                    "required": true,
                    "type":"string",
                    "description": "Flickr server number.",
                    "default": ""
                },
                "farm": {
                    "title": "farm",
                    "required": true,
                    "type":"string",
                    "description": "Flickr farm id.",
                    "default": ""
                }
              }
            },
            "status": {
                "title":"status",
                "required":true,
                "default": "published",
                "type":"string",
                "description":"The comment status.",
                "enum": ["published", "draft", "banned"]
            },
            "likes": {
              "type":"array",
              "items":{
                "title":"likes",
                "required":false,
                "default": "",
                "description":"The LIKE ids associated with the POST."
              }
            },
            "flags": {
              "type":"array",
              "items":{
                "title":"flags",
                "required":false,
                "default": "",
                "description":"The FLAG ids associated with the POST."
              }
            },
            "comments": {
                "type":"array",
                "items":{
                  "title":"comments",
                  "required":false,
                  "default": "",
                  "description":"The COMMENT ids associated with the POST."
                }
            },
            "owner": {
                "title":"owner",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The USER id that the comment is associated with."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        }
      }
    },
    
    "Comments": {
      "methods": {
        "getComments": {
          "name": "Retrieve a Post's Comments",
          "description": "Returns the latest comments for a post.",
          "httpMethod": "GET",
          "path": "/comments",
          "parameters": {
            "limit": {
                "title":"limit",
                "required":false,
                "default": 10,
                "type":"integer",
                "description":"Return a certain number."
            },
            "skip": {
                "title":"skip",
                "required":false,
                "default": 0,
                "type":"integer",
                "description":"This is used for paging. Skip the number of posts you want."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        },
        "createComment": {
          "name": "Create a Comment",
          "description": "Create a Comment for a Post. This is only allowed when a user has paid to reveal the secret.",
          "httpMethod": "POST",
          "path": "/comments/create",
          "parameters": {
            "body": {
                "title":"body",
                "required":true,
                "default": "",
                "type":"textarea",
                "description":"The comment content."
            },
            "commentId": {
                "title":"commentId",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The previous comment id."
            },
            "status": {
                "title":"status",
                "required":true,
                "default": "published",
                "type":"string",
                "description":"The comment status.",
                "enum": ["published", "draft", "banned"]
            },
            "post": {
                "title":"post",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The POST id that the comment is associated with."
            },
            "owner": {
                "title":"owner",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The USER id that the comment is associated with."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        }
      }
    },

    "Services": {
      "methods": {
        "searchFlickr": {
          "name": "Searches flickr for an image.",
          "description": "Returns images from flickr.",
          "httpMethod": "GET",
          "path": "/service/searchFlickr",
          "parameters": {
            "limit": {
                "title":"limit",
                "required":false,
                "default": 15,
                "type":"integer",
                "description":"Return a certain number per page."
            },
            "page": {
                "title":"page",
                "required":false,
                "default": 1,
                "type":"integer",
                "description":"The page number to return."
            },
            "q": {
                "title":"query",
                "required":true,
                "default": "",
                "type":"string",
                "description":"The search query. The search is carried out like %query%."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        }
      }
    }

  }
}