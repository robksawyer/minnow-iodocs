{
  "name": "Minnow API",
  "protocol": "rest",
  "basePath": "http://api.gominnow.com",
  "publicPath": "",
  "resources" : {
    
    "Authentication [FOR REFERENCE ONLY]": {
      "methods": {
        "login": {
          "name": "User Login",
          "description": "Logs a user in.",
          "httpMethod": "POST",
          "path": "/auth/login",
          "parameters": {
            "type": {
                "title":"type",
                "required":true,
                "default": "local",
                "type":"string",
                "description":"Login type."
            },
            "phone": {
                "title":"phone number",
                "required":false,
                "default": "",
                "type":"string",
                "description":"The phone number you signed up with."
            },
            "password": {
                "title":"password",
                "required":false,
                "default": "",
                "type":"string",
                "description":"Password for your account."
            }
          }
        },
        "facebook-login": {
          "name": "Facebook User Login",
          "description": "Logs a user in via Facebook.",
          "httpMethod": "GET",
          "path": "/auth/login",
          "parameters": {
            "type": {
                "title":"type",
                "required":true,
                "default": "facebook",
                "type":"string",
                "description":"Login type."
            },
            "client_id": {
                "title":"client_id",
                "required": true,
                "default": "736732276411375",
                "type":"string",
                "description":"The Facebook client id."
            }
          }
        },
        "access-token": {
          "name": "Access Token",
          "description": "Grabs an access token.",
          "httpMethod": "GET",
          "path": "/user/jwt"
        },
        "refresh-token": {
          "name": "[COMING SOON] Refresh Token",
          "description": "[COMING SOON] Grabs a refresh token.",
          "httpMethod": "GET",
          "path": "/user/jwt-refresh"
        }
      }
    },

    "Posts": {
      "methods": {

        "getLatest": {
          "name": "Latest Posts",
          "description": "Returns the latest posts.",
          "httpMethod": "GET",
          "path": "/post/latest",
          "parameters": {
            "limit": {
                "title":"limit",
                "required":false,
                "default": 10,
                "type":"integer",
                "description":"Return a certain number."
            },
            "skip": {
                "title":"skip",
                "required":false,
                "default": 0,
                "type":"integer",
                "description":"This is used for paging. Skip the number of posts you want."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        },

        "createPost": {
          "name": "Create a Post",
          "description": "Create a Post.",
          "httpMethod": "POST",
          "path": "/post/create",
          "parameters": {
            "body": {
                "title":"body",
                "required":false,
                "default": "",
                "type":"textarea",
                "description":"The post content."
            },
            "secret": {
                "title":"secret",
                "required":false,
                "default": "",
                "type":"string",
                "description":"What folks will pay for."
            },
            "category": {
                "title":"category",
                "required":true,
                "default": "uncategorized",
                "type":"string",
                "description":"The post status.",
                "enum": ["uncategorized", "person", "place", "thing", "other"]
            },
            "img": {
                "title":"img",
                "required":false,
                "default": "{}",
                "type":"object",
                "description":"A JSON object that contains the Flickr img details."
            },
            "status": {
                "title":"status",
                "required":true,
                "default": "published",
                "type":"string",
                "description":"The comment status.",
                "enum": ["published", "draft", "banned"]
            },
            "likes": {
                "title":"likes",
                "required":false,
                "default": "[]",
                "type":"array",
                "description":"The LIKE ids associated with the POST."
            },
            "flags": {
                "title":"flags",
                "required":false,
                "default": "[]",
                "type":"array",
                "description":"The FLAG ids associated with the POST."
            },
            "comments": {
                "title":"comments",
                "required":false,
                "default": "[]",
                "type":"array",
                "description":"The COMMENT ids associated with the POST."
            },
            "owner": {
                "title":"owner",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The USER id that the comment is associated with."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        }
      }
    },
    
    "Comments": {
      "methods": {
        "getComments": {
          "name": "Retrieve a Post's Comments",
          "description": "Returns the latest comments for a post.",
          "httpMethod": "GET",
          "path": "/comments",
          "parameters": {
            "limit": {
                "title":"limit",
                "required":false,
                "default": 10,
                "type":"integer",
                "description":"Return a certain number."
            },
            "skip": {
                "title":"skip",
                "required":false,
                "default": 0,
                "type":"integer",
                "description":"This is used for paging. Skip the number of posts you want."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        },
        "createComment": {
          "name": "Create a Comment",
          "description": "Create a Comment for a Post.",
          "httpMethod": "POST",
          "path": "/comments/create",
          "parameters": {
            "body": {
                "title":"body",
                "required":true,
                "default": "",
                "type":"textarea",
                "description":"The comment content."
            },
            "commentId": {
                "title":"commentId",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The previous comment id."
            },
            "status": {
                "title":"status",
                "required":true,
                "default": "published",
                "type":"string",
                "description":"The comment status.",
                "enum": ["published", "draft", "banned"]
            },
            "post": {
                "title":"post",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The POST id that the comment is associated with."
            },
            "owner": {
                "title":"owner",
                "required":true,
                "default": 0,
                "type":"integer",
                "description":"The USER id that the comment is associated with."
            },
            "access_token": {
                "title":"access_token",
                "required":true,
                "default": "",
                "type":"string",
                "description":"A valid user access token. See Authentication above for more details."
            }
          }
        }
      }
    }

  }
}